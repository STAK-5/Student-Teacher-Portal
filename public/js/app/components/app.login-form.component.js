"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
/**
 * Created by syed-muhammad-taha on 7/28/16.
 */
var core_1 = require('@angular/core');
var StpLoginForm = (function () {
    function StpLoginForm() {
    }
    StpLoginForm.prototype.ngOnInit = function () {
        this.loginUser = {
            id: '',
            password: ''
        };
    };
    StpLoginForm.prototype.login = function (model, valid) {
        console.log(model, valid);
    };
    StpLoginForm = __decorate([
        core_1.Component({
            selector: 'stp-login-form',
            template: "\n        <div class=\"row\">   \n            <div class=\"col-xs-offset-1 col-xs-10 col-sm-offset-2 col-sm-8 col-md-offset-1 col-md-10\">\n                <form #f=\"ngForm\" (ngSubmit)=\"login(f.value, f.valid)\" novalidate>\n                    <div class=\"form-group\">    \n                        <input type=\"text\" \n                           name=\"id\" \n                           id=\"id\" \n                           [(ngModel)]=\"loginUser.id\"\n                           required\n                           class=\"form-control\"\n                           #id=\"ngModel\"\n                           minlength=\"10\"\n                           maxlength=\"11\"\n                           placeholder=\"Roll no.\">\n                           <div *ngIf=\"id.touched && id.errors\" class=\"alert alert-danger\"> \n                                <span *ngIf=\"id.errors.required\">\n                                    Please enter your roll no.\n                                </span>\n                                <span *ngIf=\"id.errors.minlength?.requiredLength != id.errors.minlength?.actualLength\">\n                                    Incorrect roll no.\n                                </span>\n                           </div>\n                       </div>\n                    <div class=\"form-group\">    \n                        <input type=\"password\" \n                           name=\"password\" \n                           id=\"password\" \n                           [(ngModel)]=\"loginUser.password\"\n                           required\n                           minlength=\"8\"\n                           class=\"form-control\"\n                           #password=\"ngModel\"\n                           placeholder=\"Password\">\n                        <div *ngIf=\"password.touched && password.errors\" class=\"alert alert-danger\">    \n                            <span *ngIf=\"password.errors.required\"> \n                                Please enter your password\n                            </span>\n                            <span *ngIf=\"password.errors.minlength?.requiredLength > password.errors.minlength?.actualLength\"> \n                                Please enter 8 characters\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"row\">   \n                        <div class=\"col-xs-9\"></div>\n                        <div class=\"col-xs-1\">  \n                            <button \n                            type=\"submit\" \n                            class=\"btn btn-default btn-raised\" \n                            [ngClass]=\"{'btn-success': f.valid}\" \n                            [disabled]=\"!f.valid\">Login</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    ",
            directives: []
        }), 
        __metadata('design:paramtypes', [])
    ], StpLoginForm);
    return StpLoginForm;
}());
exports.StpLoginForm = StpLoginForm;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvYXBwLmxvZ2luLWZvcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7R0FFRztBQUNILHFCQUFnQyxlQUFlLENBQUMsQ0FBQTtBQWtFaEQ7SUFBQTtJQWNBLENBQUM7SUFWRywrQkFBUSxHQUFSO1FBQ0ksSUFBSSxDQUFDLFNBQVMsR0FBRztZQUNiLEVBQUUsRUFBRSxFQUFFO1lBQ04sUUFBUSxFQUFFLEVBQUU7U0FDZixDQUFDO0lBQ04sQ0FBQztJQUVELDRCQUFLLEdBQUwsVUFBTSxLQUFLLEVBQUUsS0FBYTtRQUN0QixPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBM0VMO1FBQUMsZ0JBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsUUFBUSxFQUFFLDYyRkF3RFQ7WUFDRCxVQUFVLEVBQUUsRUFBRTtTQUNqQixDQUFDOztvQkFBQTtJQWdCRixtQkFBQztBQUFELENBZEEsQUFjQyxJQUFBO0FBZFksb0JBQVksZUFjeEIsQ0FBQSIsImZpbGUiOiJjb21wb25lbnRzL2FwcC5sb2dpbi1mb3JtLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBzeWVkLW11aGFtbWFkLXRhaGEgb24gNy8yOC8xNi5cbiAqL1xuaW1wb3J0IHtDb21wb25lbnQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7TG9naW5Vc2VyfSBmcm9tIFwiLi4vaW50ZXJmYWNlcy9sb2dpbi5pbnRlcmZhY2VcIjtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdzdHAtbG9naW4tZm9ybScsXG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPiAgIFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy1vZmZzZXQtMSBjb2wteHMtMTAgY29sLXNtLW9mZnNldC0yIGNvbC1zbS04IGNvbC1tZC1vZmZzZXQtMSBjb2wtbWQtMTBcIj5cbiAgICAgICAgICAgICAgICA8Zm9ybSAjZj1cIm5nRm9ybVwiIChuZ1N1Ym1pdCk9XCJsb2dpbihmLnZhbHVlLCBmLnZhbGlkKVwiIG5vdmFsaWRhdGU+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+ICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwiaWRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwiaWRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFsobmdNb2RlbCldPVwibG9naW5Vc2VyLmlkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAjaWQ9XCJuZ01vZGVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbmxlbmd0aD1cIjEwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heGxlbmd0aD1cIjExXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiUm9sbCBuby5cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJpZC50b3VjaGVkICYmIGlkLmVycm9yc1wiIGNsYXNzPVwiYWxlcnQgYWxlcnQtZGFuZ2VyXCI+IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiAqbmdJZj1cImlkLmVycm9ycy5yZXF1aXJlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUGxlYXNlIGVudGVyIHlvdXIgcm9sbCBuby5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiAqbmdJZj1cImlkLmVycm9ycy5taW5sZW5ndGg/LnJlcXVpcmVkTGVuZ3RoICE9IGlkLmVycm9ycy5taW5sZW5ndGg/LmFjdHVhbExlbmd0aFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW5jb3JyZWN0IHJvbGwgbm8uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIj4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInBhc3N3b3JkXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwicGFzc3dvcmRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwicGFzc3dvcmRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIFsobmdNb2RlbCldPVwibG9naW5Vc2VyLnBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5sZW5ndGg9XCI4XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICNwYXNzd29yZD1cIm5nTW9kZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJQYXNzd29yZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAqbmdJZj1cInBhc3N3b3JkLnRvdWNoZWQgJiYgcGFzc3dvcmQuZXJyb3JzXCIgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXJcIj4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gKm5nSWY9XCJwYXNzd29yZC5lcnJvcnMucmVxdWlyZWRcIj4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBsZWFzZSBlbnRlciB5b3VyIHBhc3N3b3JkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuICpuZ0lmPVwicGFzc3dvcmQuZXJyb3JzLm1pbmxlbmd0aD8ucmVxdWlyZWRMZW5ndGggPiBwYXNzd29yZC5lcnJvcnMubWlubGVuZ3RoPy5hY3R1YWxMZW5ndGhcIj4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBsZWFzZSBlbnRlciA4IGNoYXJhY3RlcnNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj4gICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wteHMtOVwiPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC14cy0xXCI+ICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImJ0biBidG4tZGVmYXVsdCBidG4tcmFpc2VkXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW25nQ2xhc3NdPVwieydidG4tc3VjY2Vzcyc6IGYudmFsaWR9XCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW2Rpc2FibGVkXT1cIiFmLnZhbGlkXCI+TG9naW48L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgYCxcbiAgICBkaXJlY3RpdmVzOiBbXVxufSlcblxuZXhwb3J0IGNsYXNzIFN0cExvZ2luRm9ybSBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgICBwdWJsaWMgbG9naW5Vc2VyOkxvZ2luVXNlcjtcblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLmxvZ2luVXNlciA9IHtcbiAgICAgICAgICAgIGlkOiAnJyxcbiAgICAgICAgICAgIHBhc3N3b3JkOiAnJ1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGxvZ2luKG1vZGVsLCB2YWxpZDpib29sZWFuKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKG1vZGVsLCB2YWxpZCk7XG4gICAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
